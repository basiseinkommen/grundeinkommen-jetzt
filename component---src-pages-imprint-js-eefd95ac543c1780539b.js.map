{"version":3,"sources":["webpack:///./src/components/Imprint/index.js","webpack:///./src/pages/imprint.js","webpack:///./src/components/utils/FormatHtml/index.js"],"names":["Imprint","markdownRemark","subtitle","frontmatter","html","Container","section","TitleSection","FormatHtml","content","ImprintPage","Layout","Seo","title","className","dangerouslySetInnerHTML","__html"],"mappings":"mMAiCeA,EA1BC,WAAO,IACbC,EADY,OACZA,eAaSC,EAEbD,EAFFE,YAAeD,SACfE,EACEH,EADFG,KAGF,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcL,SAAUA,IACxB,kBAACM,EAAA,EAAD,CAAYC,QAASL,MCbZM,UATK,WAClB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,cACX,kBAAC,EAAD,S,y5FCVN,yBAgBeL,IAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,0BACEK,UAAU,cACVC,wBAAyB,CACvBC,OAAQP","file":"component---src-pages-imprint-js-eefd95ac543c1780539b.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Container from 'components/ui/Container'\nimport FormatHtml from 'components/utils/FormatHtml'\nimport TitleSection from 'components/ui/TitleSection'\n\nconst Imprint = () => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"imprint\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n        html\n      }\n    }\n  `)\n\n  const {\n    frontmatter: { subtitle },\n    html\n  } = markdownRemark\n\n  return (\n    <Container section>\n      <TitleSection subtitle={subtitle} />\n      <FormatHtml content={html} />\n    </Container>\n  )\n}\n\nexport default Imprint\n","import React from 'react'\n\nimport Layout from 'components/Layout'\nimport Seo from 'components/Seo'\nimport Imprint from 'components/Imprint'\n\nconst ImprintPage = () => {\n  return (\n    <Layout>\n      <Seo title=\"Impressum\" />\n      <Imprint />\n    </Layout>\n  )\n}\n\nexport default ImprintPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FormatHtml = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n)\n\nFormatHtml.propTypes = {\n  content: PropTypes.any.isRequired\n}\n\nexport default FormatHtml\n"],"sourceRoot":""}